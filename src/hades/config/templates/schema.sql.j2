--
-- PostgreSQL database dump
--

{%- macro join_options(options) %}
    {%- if options %}
    {%- set items = options.items()|list %}
    {%- for name, value in items[:-1] %}
    {{ name }} '{{ value }}',
    {%- endfor %}
    {{ items[-1][0] }} '{{ items[-1][1] }}'
    {%- endif %}
{%- endmacro %}


{%- macro table_options(options) %}
    {%- do options.update(HADES_POSTGRESQL_FOREIGN_TABLE_GLOBAL_OPTIONS) %}
    {{ join_options(options) }}
{%- endmacro %}

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner:
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner:
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: {{ HADES_POSTGRESQL_FOREIGN_SERVER_FDW}}; Type: EXTENSION; Schema: -; Owner:
--

CREATE EXTENSION IF NOT EXISTS {{ HADES_POSTGRESQL_FOREIGN_SERVER_FDW }} WITH SCHEMA public;


{%- set server_name = 'master' %}
CREATE SERVER {{ server_name }}
    {%- if  HADES_POSTGRESQL_FOREIGN_SERVER_TYPE is defined    %} TYPE    '{{ HADES_POSTGRESQL_FOREIGN_SERVER_TYPE }}'{% endif %}
    {%- if  HADES_POSTGRESQL_FOREIGN_SERVER_VERSION is defined %} VERSION '{{ HADES_POSTGRESQL_FOREIGN_SERVER_VERSION }}'{% endif %}
    FOREIGN DATA WRAPPER {{ HADES_POSTGRESQL_FOREIGN_SERVER_FDW }} OPTIONS (
    {{ join_options(HADES_POSTGRESQL_FOREIGN_SERVER_OPTIONS) }}
);


ALTER SERVER master OWNER TO postgres;

--
-- Name: USER MAPPING public SERVER atlantis_mysql; Type: USER MAPPING; Schema: -; Owner: postgres
--

{%- for user_name, options in HADES_POSTGRESQL_USER_MAPPINGS.items() %}
CREATE USER MAPPING FOR
{%- if user_name == 'PUBLIC' -%}
PUBLIC
{%- else -%}
"{{ user_name }}"
{%- endif -%}
SERVER {{ server_name }} OPTIONS (
    {{ join_options(options) }}
);
{%- endfor %}


SET search_path = public, pg_catalog;

SET default_tablespace = '';

--
-- Name: dhcphost; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE FOREIGN TABLE foreign_dhcphost (
    id integer NOT NULL,
    mac macaddr NOT NULL,
    ipaddress inet NOT NULL
)
SERVER {{ server_name }}
OPTIONS (
    {{ table_options(HADES_POSTGRESQL_FOREIGN_TABLE_DHCPHOST_OPTIONS) }}
);


ALTER FOREIGN TABLE foreign_dhcphost OWNER TO postgres;

--
-- Name: dhcphost; Type: MATERIALIZED VIEW; Schema: public; Owner: {{ HADES_AGENT_USER }}; Tablespace:
--

CREATE MATERIALIZED VIEW dhcphost AS
 SELECT foreign_dhcphost.id,
    foreign_dhcphost.mac,
    foreign_dhcphost.ipaddress
   FROM foreign_dhcphost
  WITH DATA;


ALTER TABLE dhcphost OWNER TO "{{ HADES_AGENT_USER }}";

--
-- Name: foreign_nas; Type: FOREIGN TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE FOREIGN TABLE foreign_nas (
    id integer NOT NULL,
    nasname character varying(128) NOT NULL,
    shortname character varying(32) NOT NULL,
    type character varying(30) DEFAULT 'other'::character varying NOT NULL,
    ports integer,
    secret character varying(60) NOT NULL,
    server character varying(64),
    community character varying(50),
    description character varying(200)
)
SERVER {{ server_name }}
OPTIONS (
    {{ table_options(HADES_POSTGRESQL_FOREIGN_TABLE_NAS_OPTIONS) }}
);


ALTER FOREIGN TABLE foreign_nas OWNER TO postgres;

--
-- Name: foreign_radcheck; Type: FOREIGN TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE FOREIGN TABLE foreign_radcheck (
    id integer NOT NULL,
    username character varying(64) NOT NULL,
    nasipaddress inet NOT NULL,
    nasportid character varying(15) NOT NULL,
    attribute character varying(64) NOT NULL,
    op character(2) NOT NULL,
    value character varying(253) NOT NULL
)
SERVER {{ server_name }}
OPTIONS (
    {{ table_options(HADES_POSTGRESQL_FOREIGN_TABLE_RADCHECK_OPTIONS) }}
);


ALTER FOREIGN TABLE foreign_radcheck OWNER TO postgres;

--
-- Name: foreign_radgroupcheck; Type: FOREIGN TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE FOREIGN TABLE foreign_radgroupcheck (
    id integer NOT NULL,
    groupname character varying(64) NOT NULL,
    attribute character varying(64) NOT NULL,
    op character(2) NOT NULL,
    value character varying(253) NOT NULL
)
SERVER {{ server_name }}
OPTIONS (
    {{ table_options(HADES_POSTGRESQL_FOREIGN_TABLE_RADGROUPCHECK_OPTIONS) }}
);


ALTER FOREIGN TABLE foreign_radgroupcheck OWNER TO postgres;

--
-- Name: foreign_radgroupreply; Type: FOREIGN TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE FOREIGN TABLE foreign_radgroupreply (
    id integer NOT NULL,
    groupname character varying(64) NOT NULL,
    attribute character varying(64) NOT NULL,
    op character(2) NOT NULL,
    value character varying(253) NOT NULL
)
SERVER {{ server_name }}
OPTIONS (
    {{ table_options(HADES_POSTGRESQL_FOREIGN_TABLE_RADGROUPREPLY_OPTIONS) }}
);


ALTER FOREIGN TABLE foreign_radgroupreply OWNER TO postgres;

--
-- Name: foreign_radreply; Type: FOREIGN TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE FOREIGN TABLE foreign_radreply (
    id integer NOT NULL,
    username character varying(64) NOT NULL,
    nasipaddress inet NOT NULL,
    nasportid character varying(15) NOT NULL,
    attribute character varying(64) NOT NULL,
    op character(2) DEFAULT '='::bpchar NOT NULL,
    value character varying(253) NOT NULL
)
SERVER {{ server_name }}
OPTIONS (
    {{ table_options(HADES_POSTGRESQL_FOREIGN_TABLE_RADREPLY_OPTIONS) }}
);


ALTER FOREIGN TABLE foreign_radreply OWNER TO postgres;

--
-- Name: foreign_radusergroup; Type: FOREIGN TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE FOREIGN TABLE foreign_radusergroup (
    username character varying(64) NOT NULL,
    nasipaddress inet NOT NULL,
    nasportid character varying(15) NOT NULL,
    groupname character varying(64) NOT NULL,
    priority integer NOT NULL
)
SERVER {{ server_name }}
OPTIONS (
    {{ table_options(HADES_POSTGRESQL_FOREIGN_TABLE_RADUSERGROUP_OPTIONS) }}
);


ALTER FOREIGN TABLE foreign_radusergroup OWNER TO postgres;

--
-- Name: nas; Type: MATERIALIZED VIEW; Schema: public; Owner: {{ HADES_AGENT_USER }}; Tablespace:
--

CREATE MATERIALIZED VIEW nas AS
 SELECT foreign_nas.id,
    foreign_nas.nasname,
    foreign_nas.shortname,
    foreign_nas.type,
    foreign_nas.ports,
    foreign_nas.secret,
    foreign_nas.server,
    foreign_nas.community,
    foreign_nas.description
   FROM foreign_nas
  WITH DATA;


ALTER TABLE nas OWNER TO "{{ HADES_AGENT_USER }}";

SET default_with_oids = false;

--
-- Name: radacct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE radacct (
    radacctid bigint NOT NULL,
    acctsessionid character varying(64) NOT NULL,
    acctuniqueid character varying(32) NOT NULL,
    username character varying(253),
    groupname character varying(253),
    realm character varying(64),
    nasipaddress inet NOT NULL,
    nasportid character varying(15),
    nasporttype character varying(32),
    acctstarttime timestamp with time zone,
    acctstoptime timestamp with time zone,
    acctsessiontime bigint,
    acctauthentic character varying(32),
    connectinfo_start character varying(50),
    connectinfo_stop character varying(50),
    acctinputoctets bigint,
    acctoutputoctets bigint,
    calledstationid character varying(50),
    callingstationid character varying(50),
    acctterminatecause character varying(32),
    servicetype character varying(32),
    xascendsessionsvrkey character varying(10),
    framedprotocol character varying(32),
    framedipaddress inet,
    acctstartdelay integer,
    acctstopdelay integer
);


ALTER TABLE radacct OWNER TO postgres;

--
-- Name: radacct_radacctid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE radacct_radacctid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE radacct_radacctid_seq OWNER TO postgres;

--
-- Name: radacct_radacctid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE radacct_radacctid_seq OWNED BY radacct.radacctid;


--
-- Name: radcheck; Type: MATERIALIZED VIEW; Schema: public; Owner: {{ HADES_AGENT_USER }}; Tablespace:
--

CREATE MATERIALIZED VIEW radcheck AS
 SELECT foreign_radcheck.id,
    foreign_radcheck.username,
    foreign_radcheck.nasipaddress,
    foreign_radcheck.nasportid,
    foreign_radcheck.attribute,
    foreign_radcheck.op,
    foreign_radcheck.value
   FROM foreign_radcheck
  WITH DATA;


ALTER TABLE radcheck OWNER TO "{{ HADES_AGENT_USER }}";

--
-- Name: radgroupcheck; Type: MATERIALIZED VIEW; Schema: public; Owner: {{ HADES_AGENT_USER }}; Tablespace:
--

CREATE MATERIALIZED VIEW radgroupcheck AS
 SELECT foreign_radgroupcheck.id,
    foreign_radgroupcheck.groupname,
    foreign_radgroupcheck.attribute,
    foreign_radgroupcheck.op,
    foreign_radgroupcheck.value
   FROM foreign_radgroupcheck
  WITH DATA;


ALTER TABLE radgroupcheck OWNER TO "{{ HADES_AGENT_USER }}";

--
-- Name: radgroupreply; Type: MATERIALIZED VIEW; Schema: public; Owner: {{ HADES_AGENT_USER }}; Tablespace:
--

CREATE MATERIALIZED VIEW radgroupreply AS
 SELECT foreign_radgroupreply.id,
    foreign_radgroupreply.groupname,
    foreign_radgroupreply.attribute,
    foreign_radgroupreply.op,
    foreign_radgroupreply.value
   FROM foreign_radgroupreply
  WITH DATA;


ALTER TABLE radgroupreply OWNER TO "{{ HADES_AGENT_USER }}";

--
-- Name: radpostauth; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE radpostauth (
    id bigint NOT NULL,
    username character varying(253) NOT NULL,
    nasipaddress inet NOT NULL,
    nasportid character varying(15) NOT NULL,
    packettype character varying(32),
    replymessage character varying(253),
    authdate timestamp without time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);


ALTER TABLE radpostauth OWNER TO postgres;

--
-- Name: radpostauth_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE radpostauth_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE radpostauth_id_seq OWNER TO postgres;

--
-- Name: radpostauth_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE radpostauth_id_seq OWNED BY radpostauth.id;


--
-- Name: radreply; Type: MATERIALIZED VIEW; Schema: public; Owner: {{ HADES_AGENT_USER }}; Tablespace:
--

CREATE MATERIALIZED VIEW radreply AS
 SELECT foreign_radreply.id,
    foreign_radreply.username,
    foreign_radreply.nasipaddress,
    foreign_radreply.nasportid,
    foreign_radreply.attribute,
    foreign_radreply.op,
    foreign_radreply.value
   FROM foreign_radreply
  WITH DATA;


ALTER TABLE radreply OWNER TO "{{ HADES_AGENT_USER }}";

--
-- Name: radusergroup; Type: MATERIALIZED VIEW; Schema: public; Owner: {{ HADES_AGENT_USER }}; Tablespace:
--

CREATE MATERIALIZED VIEW radusergroup AS
 SELECT foreign_radusergroup.username,
    foreign_radusergroup.nasipaddress,
    foreign_radusergroup.nasportid,
    foreign_radusergroup.groupname,
    foreign_radusergroup.priority
   FROM foreign_radusergroup
  WITH DATA;


ALTER TABLE radusergroup OWNER TO "{{ HADES_AGENT_USER }}";

--
-- Name: radacctid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY radacct ALTER COLUMN radacctid SET DEFAULT nextval('radacct_radacctid_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY radpostauth ALTER COLUMN id SET DEFAULT nextval('radpostauth_id_seq'::regclass);


--
-- Name: radacct_acctuniqueid_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY radacct
    ADD CONSTRAINT radacct_acctuniqueid_key UNIQUE (acctuniqueid);


--
-- Name: radacct_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY radacct
    ADD CONSTRAINT radacct_pkey PRIMARY KEY (radacctid);


--
-- Name: radpostauth_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY radpostauth
    ADD CONSTRAINT radpostauth_pkey PRIMARY KEY (id);


--
-- Name: radacct_active_user_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX radacct_active_user_idx ON radacct USING btree (username, nasipaddress, acctsessionid) WHERE (acctstoptime IS NULL);


--
-- Name: radacct_start_user_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX radacct_start_user_idx ON radacct USING btree (acctstarttime, username);


--
-- Name: radpostauth_username; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX radpostauth_username ON radpostauth USING btree (username);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: foreign_dhcphost; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE foreign_dhcphost FROM PUBLIC;
REVOKE ALL ON TABLE foreign_dhcphost FROM postgres;
GRANT ALL ON TABLE foreign_dhcphost TO postgres;
GRANT SELECT ON TABLE foreign_dhcphost TO "{{ HADES_AGENT_USER }}";


--
-- Name: dhcphost; Type: ACL; Schema: public; Owner: {{ HADES_AGENT_USER }}
--

REVOKE ALL ON TABLE dhcphost FROM PUBLIC;
REVOKE ALL ON TABLE dhcphost FROM "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE dhcphost TO "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE dhcphost TO postgres;


--
-- Name: foreign_nas; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE foreign_nas FROM PUBLIC;
REVOKE ALL ON TABLE foreign_nas FROM postgres;
GRANT ALL ON TABLE foreign_nas TO postgres;
GRANT SELECT ON TABLE foreign_nas TO "{{ HADES_AGENT_USER }}";


--
-- Name: foreign_radcheck; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE foreign_radcheck FROM PUBLIC;
REVOKE ALL ON TABLE foreign_radcheck FROM postgres;
GRANT ALL ON TABLE foreign_radcheck TO postgres;
GRANT SELECT ON TABLE foreign_radcheck TO "{{ HADES_AGENT_USER }}";


--
-- Name: foreign_radgroupcheck; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE foreign_radgroupcheck FROM PUBLIC;
REVOKE ALL ON TABLE foreign_radgroupcheck FROM postgres;
GRANT ALL ON TABLE foreign_radgroupcheck TO postgres;
GRANT SELECT ON TABLE foreign_radgroupcheck TO "{{ HADES_AGENT_USER }}";


--
-- Name: foreign_radgroupreply; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE foreign_radgroupreply FROM PUBLIC;
REVOKE ALL ON TABLE foreign_radgroupreply FROM postgres;
GRANT ALL ON TABLE foreign_radgroupreply TO postgres;
GRANT SELECT ON TABLE foreign_radgroupreply TO "{{ HADES_AGENT_USER }}";


--
-- Name: foreign_radreply; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE foreign_radreply FROM PUBLIC;
REVOKE ALL ON TABLE foreign_radreply FROM postgres;
GRANT ALL ON TABLE foreign_radreply TO postgres;
GRANT SELECT ON TABLE foreign_radreply TO "{{ HADES_AGENT_USER }}";


--
-- Name: foreign_radusergroup; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE foreign_radusergroup FROM PUBLIC;
REVOKE ALL ON TABLE foreign_radusergroup FROM postgres;
GRANT ALL ON TABLE foreign_radusergroup TO postgres;
GRANT SELECT ON TABLE foreign_radusergroup TO "{{ HADES_AGENT_USER }}";


--
-- Name: nas; Type: ACL; Schema: public; Owner: {{ HADES_AGENT_USER }}
--

REVOKE ALL ON TABLE nas FROM PUBLIC;
REVOKE ALL ON TABLE nas FROM "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE nas TO "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE nas TO postgres;
GRANT SELECT ON TABLE nas TO "{{ HADES_FREERADIUS_USER }}";


--
-- Name: radacct; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE radacct FROM PUBLIC;
REVOKE ALL ON TABLE radacct FROM postgres;
GRANT ALL ON TABLE radacct TO postgres;
GRANT SELECT,INSERT,UPDATE ON TABLE radacct TO "{{ HADES_FREERADIUS_USER }}";
GRANT SELECT,DELETE ON TABLE radacct TO "{{ HADES_AGENT_USER }}";
GRANT SELECT ON TABLE radacct TO "{{ HADES_PORTAL_USER }}";


--
-- Name: radacct_radacctid_seq; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON SEQUENCE radacct_radacctid_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE radacct_radacctid_seq FROM postgres;
GRANT ALL ON SEQUENCE radacct_radacctid_seq TO postgres;
GRANT SELECT,USAGE ON SEQUENCE radacct_radacctid_seq TO "{{ HADES_FREERADIUS_USER }}";


--
-- Name: radcheck; Type: ACL; Schema: public; Owner: {{ HADES_AGENT_USER }}
--

REVOKE ALL ON TABLE radcheck FROM PUBLIC;
REVOKE ALL ON TABLE radcheck FROM "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radcheck TO "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radcheck TO postgres;
GRANT SELECT ON TABLE radcheck TO "{{ HADES_FREERADIUS_USER }}";


--
-- Name: radgroupcheck; Type: ACL; Schema: public; Owner: {{ HADES_AGENT_USER }}
--

REVOKE ALL ON TABLE radgroupcheck FROM PUBLIC;
REVOKE ALL ON TABLE radgroupcheck FROM "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radgroupcheck TO "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radgroupcheck TO postgres;
GRANT SELECT ON TABLE radgroupcheck TO "{{ HADES_FREERADIUS_USER }}";


--
-- Name: radgroupreply; Type: ACL; Schema: public; Owner: {{ HADES_AGENT_USER }}
--

REVOKE ALL ON TABLE radgroupreply FROM PUBLIC;
REVOKE ALL ON TABLE radgroupreply FROM "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radgroupreply TO "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radgroupreply TO postgres;
GRANT SELECT ON TABLE radgroupreply TO "{{ HADES_FREERADIUS_USER }}";


--
-- Name: radpostauth; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE radpostauth FROM PUBLIC;
REVOKE ALL ON TABLE radpostauth FROM postgres;
GRANT ALL ON TABLE radpostauth TO postgres;
GRANT SELECT,INSERT,UPDATE ON TABLE radpostauth TO "{{ HADES_FREERADIUS_USER }}";
GRANT SELECT,DELETE ON TABLE radpostauth TO "{{ HADES_AGENT_USER }}";
GRANT SELECT ON TABLE radpostauth TO "{{ HADES_PORTAL_USER }}";


--
-- Name: radpostauth_id_seq; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON SEQUENCE radpostauth_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE radpostauth_id_seq FROM postgres;
GRANT ALL ON SEQUENCE radpostauth_id_seq TO postgres;
GRANT SELECT,USAGE ON SEQUENCE radpostauth_id_seq TO "{{ HADES_FREERADIUS_USER }}";


--
-- Name: radreply; Type: ACL; Schema: public; Owner: {{ HADES_AGENT_USER }}
--

REVOKE ALL ON TABLE radreply FROM PUBLIC;
REVOKE ALL ON TABLE radreply FROM "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radreply TO "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radreply TO postgres;
GRANT SELECT ON TABLE radreply TO "{{ HADES_FREERADIUS_USER }}";
GRANT SELECT ON TABLE radreply TO "{{ HADES_PORTAL_USER }}";


--
-- Name: radusergroup; Type: ACL; Schema: public; Owner: {{ HADES_AGENT_USER }}
--

REVOKE ALL ON TABLE radusergroup FROM PUBLIC;
REVOKE ALL ON TABLE radusergroup FROM "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radusergroup TO "{{ HADES_AGENT_USER }}";
GRANT ALL ON TABLE radusergroup TO postgres;
GRANT SELECT ON TABLE radusergroup TO "{{ HADES_FREERADIUS_USER }}";
GRANT SELECT ON TABLE radusergroup TO "{{ HADES_PORTAL_USER }}";


--
-- PostgreSQL database dump complete
--
