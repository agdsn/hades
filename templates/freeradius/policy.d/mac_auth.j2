# {{ comment }}

set_hades_user_name {
	if(&User-Name && (&User-Name =~ /^${policy.mac-addr-regexp}$/i)) {
		update request {
			&Hades-User-Name := "%{tolower:%{1}:%{2}:%{3}:%{4}:%{5}:%{6}}"
		}
	}
	else {
		update request {
			&Hades-User-Name := &User-Name
		}
	}
	updated
}

# Set the Cleartext-Password to be equal to the User-Name, if the User-Name is
# a MAC address. This must be called before normalizing the User-Name or
# otherwise the password verification will fail
set_cleartext_password {
	if(&User-Name && (&User-Name =~ /^${policy.mac-addr-regexp}$/i)) {
		update control {
			&Cleartext-Password := "%{User-Name}"
		}
		updated
	}
	else {
		noop
	}
}

verify_calling_station_id {
	if ((&Service-Type == Call-Check) && &User-Name =~ /^${policy.mac-addr-regexp}$/i) {
		# Check that the Calling-Station-Id reported by the NAS equals the
		# User-Name to ensure that the request originated from the correct
		# device, otherwise a user could enter the MAC address if Web-Auth is
		# used
		if (&Calling-Station-Id != "%{toupper:%{1}-%{2}-%{3}-%{4}-%{5}-%{6}}") {
			reject
		}
		else {
			noop
		}
	}
	else {
		noop
	}
}

lookup_sql {
	sql
	# We implement the query_on_not_found setting, that was present in 2.x
	# in unlang
	if (notfound) {
		update request {
			&Hades-SQL-User-Name := "{{ HADES_RADIUS_UNKNOWN_USER }}"
		}
		updated
		sql
	}
}
