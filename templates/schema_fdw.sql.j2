-- {{ comment }}

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner:
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner:
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: alternative_dns; Type: TABLE; Schema: public; Owner: {{ constants.DATABASE_USER }}; Tablespace:
--

CREATE TABLE alternative_dns (
    {% if HADES_POSTGRESQL_FOREIGN_TABLE_ALTERNATIVE_DNS_IPADDRESS_STRING %}
    "IPAddress" text NOT NULL
    {% else %}
    "IPAddress" inet NOT NULL
    {% endif %}
);


ALTER TABLE alternative_dns OWNER TO "{{ constants.DATABASE_USER }}";

--
-- Name: auth_dhcp_host; Type: TABLE; Schema: public; Owner: {{ constants.DATABASE_USER }}; Tablespace:
--

CREATE TABLE auth_dhcp_host (
    {% if HADES_POSTGRESQL_FOREIGN_TABLE_AUTH_DHCP_HOST_MAC_STRING %}
    "MAC" character(17) NOT NULL,
    {% else %}
    "MAC" macaddr NOT NULL,
    {% endif %}
    {% if HADES_POSTGRESQL_FOREIGN_TABLE_AUTH_DHCP_HOST_IPADDRESS_STRING %}
    "IPAddress" text NOT NULL,
    {% else %}
    "IPAddress" inet NOT NULL,
    {% endif %}
    "Hostname" text
);


ALTER TABLE auth_dhcp_host OWNER TO "{{ constants.DATABASE_USER }}";

--
-- Name: nas; Type: TABLE; Schema: public; Owner: {{ constants.DATABASE_USER }}; Tablespace:
--

CREATE TABLE nas (
    "Id" integer NOT NULL,
    "NASName" text NOT NULL,
    "ShortName" text NOT NULL,
    "Type" text DEFAULT 'other'::character varying NOT NULL,
    "Ports" integer,
    "Secret" text NOT NULL,
    "Server" text,
    "Community" text,
    "Description" text
);


ALTER TABLE nas OWNER TO "{{ constants.DATABASE_USER }}";

--
-- Name: radcheck; Type: TABLE; Schema: public; Owner: {{ constants.DATABASE_USER }}; Tablespace:
--

CREATE TABLE radcheck (
    "Priority" integer NOT NULL,
    "UserName" text,
    {% if HADES_POSTGRESQL_FOREIGN_TABLE_RADCHECK_NASIPADDRESS_STRING %}
    "NASIPAddress" text,
    {% else %}
    "NASIPAddress" inet,
    {% endif %}
    "NASPortId" text,
    "Attribute" text NOT NULL,
    "Op" character(2) NOT NULL,
    "Value" text NOT NULL
);


ALTER TABLE radcheck OWNER TO "{{ constants.DATABASE_USER }}";

--
-- Name: radgroupcheck; Type: TABLE; Schema: public; Owner: {{ constants.DATABASE_USER }}; Tablespace:
--

CREATE TABLE radgroupcheck (
    "Priority" integer NOT NULL,
    "GroupName" text NOT NULL,
    "Attribute" text NOT NULL,
    "Op" character(2) NOT NULL,
    "Value" text NOT NULL
);


ALTER TABLE radgroupcheck OWNER TO "{{ constants.DATABASE_USER }}";

--
-- Name: radgroupreply; Type: TABLE; Schema: public; Owner: {{ constants.DATABASE_USER }}; Tablespace:
--

CREATE TABLE radgroupreply (
    "Priority" integer NOT NULL,
    "GroupName" text NOT NULL,
    "Attribute" text NOT NULL,
    "Op" character(2) NOT NULL,
    "Value" text NOT NULL
);


ALTER TABLE radgroupreply OWNER TO "{{ constants.DATABASE_USER }}";

--
-- Name: radreply; Type: TABLE; Schema: public; Owner: {{ constants.DATABASE_USER }}; Tablespace:
--

CREATE TABLE radreply (
    "Priority" integer NOT NULL,
    "UserName" text,
    {% if HADES_POSTGRESQL_FOREIGN_TABLE_RADREPLY_NASIPADDRESS_STRING %}
    "NASIPAddress" text,
    {% else %}
    "NASIPAddress" inet,
    {% endif %}
    "NASPortId" text,
    "Attribute" text NOT NULL,
    "Op" character(2) DEFAULT '='::bpchar NOT NULL,
    "Value" text NOT NULL
);


ALTER TABLE radreply OWNER TO "{{ constants.DATABASE_USER }}";

--
-- Name: radusergroup; Type: TABLE; Schema: public; Owner: {{ constants.DATABASE_USER }}; Tablespace:
--

CREATE TABLE radusergroup (
    "UserName" text,
    {% if HADES_POSTGRESQL_FOREIGN_TABLE_RADUSERGROUP_NASIPADDRESS_STRING %}
    "NASIPAddress" text,
    {% else %}
    "NASIPAddress" inet,
    {% endif %}
    "NASPortId" text,
    "GroupName" text NOT NULL,
    "Priority" integer NOT NULL
);


ALTER TABLE radusergroup OWNER TO "{{ constants.DATABASE_USER }}";


--
-- Name: alternative_dns; Type: ACL; Schema: public; Owner: {{ constants.DATABASE_USER }}
--

REVOKE ALL ON TABLE alternative_dns FROM PUBLIC;
REVOKE ALL ON TABLE alternative_dns FROM "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE alternative_dns TO "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE alternative_dns TO "{{ constants.LOCAL_MASTER_DATABASE_USER }}";


--
-- Name: auth_dhcp_host; Type: ACL; Schema: public; Owner: {{ constants.DATABASE_USER }}
--

REVOKE ALL ON TABLE auth_dhcp_host FROM PUBLIC;
REVOKE ALL ON TABLE auth_dhcp_host FROM "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE auth_dhcp_host TO "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE auth_dhcp_host TO "{{ constants.LOCAL_MASTER_DATABASE_USER }}";


--
-- Name: nas; Type: ACL; Schema: public; Owner: {{ constants.DATABASE_USER }}
--

REVOKE ALL ON TABLE nas FROM PUBLIC;
REVOKE ALL ON TABLE nas FROM "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE nas TO "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE nas TO "{{ constants.LOCAL_MASTER_DATABASE_USER }}";


--
-- Name: radcheck; Type: ACL; Schema: public; Owner: {{ constants.DATABASE_USER }}
--

REVOKE ALL ON TABLE radcheck FROM PUBLIC;
REVOKE ALL ON TABLE radcheck FROM "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radcheck TO "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radcheck TO "{{ constants.LOCAL_MASTER_DATABASE_USER }}";


--
-- Name: radgroupcheck; Type: ACL; Schema: public; Owner: {{ constants.DATABASE_USER }}
--

REVOKE ALL ON TABLE radgroupcheck FROM PUBLIC;
REVOKE ALL ON TABLE radgroupcheck FROM "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radgroupcheck TO "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radgroupcheck TO "{{ constants.LOCAL_MASTER_DATABASE_USER }}";


--
-- Name: radgroupreply; Type: ACL; Schema: public; Owner: {{ constants.DATABASE_USER }}
--

REVOKE ALL ON TABLE radgroupreply FROM PUBLIC;
REVOKE ALL ON TABLE radgroupreply FROM "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radgroupreply TO "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radgroupreply TO "{{ constants.LOCAL_MASTER_DATABASE_USER }}";


--
-- Name: radreply; Type: ACL; Schema: public; Owner: {{ constants.DATABASE_USER }}
--

REVOKE ALL ON TABLE radreply FROM PUBLIC;
REVOKE ALL ON TABLE radreply FROM "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radreply TO "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radreply TO "{{ constants.LOCAL_MASTER_DATABASE_USER }}";


--
-- Name: radusergroup; Type: ACL; Schema: public; Owner: {{ constants.DATABASE_USER }}
--

REVOKE ALL ON TABLE radusergroup FROM PUBLIC;
REVOKE ALL ON TABLE radusergroup FROM "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radusergroup TO "{{ constants.DATABASE_USER }}";
GRANT ALL ON TABLE radusergroup TO "{{ constants.LOCAL_MASTER_DATABASE_USER }}";


--
-- PostgreSQL database dump complete
--
